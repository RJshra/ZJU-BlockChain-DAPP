/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Student_ERC20,
  Student_ERC20Interface,
} from "../../../contracts/studentERC20.sol/Student_ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "student",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "student",
        type: "address",
      },
    ],
    name: "gain_points",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "student",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f2638038062001f26833981810160405281019062000037919062000369565b8282816003908051906020019062000051929190620000b7565b5080600490805190602001906200006a929190620000b7565b50505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000468565b828054620000c59062000432565b90600052602060002090601f016020900481019282620000e9576000855562000135565b82601f106200010457805160ff191683800117855562000135565b8280016001018555821562000135579182015b828111156200013457825182559160200191906001019062000117565b5b50905062000144919062000148565b5090565b5b808211156200016357600081600090555060010162000149565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d08262000185565b810181811067ffffffffffffffff82111715620001f257620001f162000196565b5b80604052505050565b60006200020762000167565b9050620002158282620001c5565b919050565b600067ffffffffffffffff82111562000238576200023762000196565b5b620002438262000185565b9050602081019050919050565b60005b838110156200027057808201518184015260208101905062000253565b8381111562000280576000848401525b50505050565b60006200029d62000297846200021a565b620001fb565b905082815260208101848484011115620002bc57620002bb62000180565b5b620002c984828562000250565b509392505050565b600082601f830112620002e957620002e86200017b565b5b8151620002fb84826020860162000286565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003318262000304565b9050919050565b620003438162000324565b81146200034f57600080fd5b50565b600081519050620003638162000338565b92915050565b60008060006060848603121562000385576200038462000171565b5b600084015167ffffffffffffffff811115620003a657620003a562000176565b5b620003b486828701620002d1565b935050602084015167ffffffffffffffff811115620003d857620003d762000176565b5b620003e686828701620002d1565b9250506040620003f98682870162000352565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200044b57607f821691505b6020821081141562000462576200046162000403565b5b50919050565b611aae80620004786000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461025f578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806340c10f19146101f557806370a082311461021157806395d89b4114610241576100ea565b80631d8f0315116100c85780631d8f03151461015b57806323b872dd14610177578063313ce567146101a757806339509351146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b6040516101049190611112565b60405180910390f35b610127600480360381019061012291906111cd565b61039d565b6040516101349190611228565b60405180910390f35b6101456103c0565b6040516101529190611252565b60405180910390f35b6101756004803603810190610170919061126d565b6103ca565b005b610191600480360381019061018c919061129a565b61051e565b60405161019e9190611228565b60405180910390f35b6101af61054d565b6040516101bc9190611309565b60405180910390f35b6101df60048036038101906101da91906111cd565b610556565b6040516101ec9190611228565b60405180910390f35b61020f600480360381019061020a91906111cd565b61058d565b005b61022b6004803603810190610226919061126d565b6105f5565b6040516102389190611252565b60405180910390f35b61024961063d565b6040516102569190611112565b60405180910390f35b610279600480360381019061027491906111cd565b6106cf565b005b610295600480360381019061029091906111cd565b610737565b6040516102a29190611228565b60405180910390f35b6102c560048036038101906102c091906111cd565b6107ae565b6040516102d29190611228565b60405180910390f35b6102f560048036038101906102f09190611324565b6107d1565b6040516103029190611252565b60405180910390f35b60606003805461031a90611393565b80601f016020809104026020016040519081016040528092919081815260200182805461034690611393565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610858565b90506103b5818585610860565b600191505092915050565b6000600254905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042457600080fd5b60001515600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90611437565b60405180910390fd5b6104c381612710610a2b565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080610529610858565b9050610536858285610b8b565b610541858585610c17565b60019150509392505050565b60006012905090565b600080610561610858565b905061058281858561057385896107d1565b61057d9190611486565b610860565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e757600080fd5b6105f18282610a2b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461064c90611393565b80601f016020809104026020016040519081016040528092919081815260200182805461067890611393565b80156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072957600080fd5b6107338282610e98565b5050565b600080610742610858565b9050600061075082866107d1565b905083811015610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c9061154e565b60405180910390fd5b6107a28286868403610860565b60019250505092915050565b6000806107b9610858565b90506107c6818585610c17565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c7906115e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611672565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a1e9190611252565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906116de565b60405180910390fd5b610aa76000838361106f565b8060026000828254610ab99190611486565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b0e9190611486565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b739190611252565b60405180910390a3610b8760008383611074565b5050565b6000610b9784846107d1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c115781811015610c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfa9061174a565b60405180910390fd5b610c108484848403610860565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e906117dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee9061186e565b60405180910390fd5b610d0283838361106f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7f90611900565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e1b9190611486565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e7f9190611252565b60405180910390a3610e92848484611074565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eff90611992565b60405180910390fd5b610f148260008361106f565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611a24565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610ff19190611a44565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110569190611252565b60405180910390a361106a83600084611074565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b3578082015181840152602081019050611098565b838111156110c2576000848401525b50505050565b6000601f19601f8301169050919050565b60006110e482611079565b6110ee8185611084565b93506110fe818560208601611095565b611107816110c8565b840191505092915050565b6000602082019050818103600083015261112c81846110d9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061116482611139565b9050919050565b61117481611159565b811461117f57600080fd5b50565b6000813590506111918161116b565b92915050565b6000819050919050565b6111aa81611197565b81146111b557600080fd5b50565b6000813590506111c7816111a1565b92915050565b600080604083850312156111e4576111e3611134565b5b60006111f285828601611182565b9250506020611203858286016111b8565b9150509250929050565b60008115159050919050565b6112228161120d565b82525050565b600060208201905061123d6000830184611219565b92915050565b61124c81611197565b82525050565b60006020820190506112676000830184611243565b92915050565b60006020828403121561128357611282611134565b5b600061129184828501611182565b91505092915050565b6000806000606084860312156112b3576112b2611134565b5b60006112c186828701611182565b93505060206112d286828701611182565b92505060406112e3868287016111b8565b9150509250925092565b600060ff82169050919050565b611303816112ed565b82525050565b600060208201905061131e60008301846112fa565b92915050565b6000806040838503121561133b5761133a611134565b5b600061134985828601611182565b925050602061135a85828601611182565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113ab57607f821691505b602082108114156113bf576113be611364565b5b50919050565b7f796f752068617665206761696e65642074686520706f696e747320616c72656160008201527f6479210000000000000000000000000000000000000000000000000000000000602082015250565b6000611421602383611084565b915061142c826113c5565b604082019050919050565b6000602082019050818103600083015261145081611414565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061149182611197565b915061149c83611197565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114d1576114d0611457565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611538602583611084565b9150611543826114dc565b604082019050919050565b600060208201905081810360008301526115678161152b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ca602483611084565b91506115d58261156e565b604082019050919050565b600060208201905081810360008301526115f9816115bd565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061165c602283611084565b915061166782611600565b604082019050919050565b6000602082019050818103600083015261168b8161164f565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006116c8601f83611084565b91506116d382611692565b602082019050919050565b600060208201905081810360008301526116f7816116bb565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611734601d83611084565b915061173f826116fe565b602082019050919050565b6000602082019050818103600083015261176381611727565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006117c6602583611084565b91506117d18261176a565b604082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611858602383611084565b9150611863826117fc565b604082019050919050565b600060208201905081810360008301526118878161184b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118ea602683611084565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061197c602183611084565b915061198782611920565b604082019050919050565b600060208201905081810360008301526119ab8161196f565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a0e602283611084565b9150611a19826119b2565b604082019050919050565b60006020820190508181036000830152611a3d81611a01565b9050919050565b6000611a4f82611197565b9150611a5a83611197565b925082821015611a6d57611a6c611457565b5b82820390509291505056fea2646970667358221220deff4e35874acd2858704f1ecf7467d20f51410b36356d18d70aeb3953b5038b64736f6c63430008090033";

type Student_ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Student_ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Student_ERC20__factory extends ContractFactory {
  constructor(...args: Student_ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Student_ERC20> {
    return super.deploy(
      name,
      symbol,
      _owner,
      overrides || {}
    ) as Promise<Student_ERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, _owner, overrides || {});
  }
  override attach(address: string): Student_ERC20 {
    return super.attach(address) as Student_ERC20;
  }
  override connect(signer: Signer): Student_ERC20__factory {
    return super.connect(signer) as Student_ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Student_ERC20Interface {
    return new utils.Interface(_abi) as Student_ERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Student_ERC20 {
    return new Contract(address, _abi, signerOrProvider) as Student_ERC20;
  }
}
